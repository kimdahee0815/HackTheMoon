<!DOCTYPE html>
<html lang="{{ meta.mainLanguage }}">
  <head>
    <title>{% if title %}{{ title }}{% else %}{{ page.fileSlug }}{% endif %}</title>
    {%include "components/pageheader.njk"%}
    {% for imp in dynamics.common.head %}
      {% include imp %}
    {% endfor %}
    {% for imp in dynamics.index.head %}
      {% include imp %}
    {% endfor %}
  </head>
  <body class="theme-{{meta.baseTheme}} markdown-preview-view markdown-rendered markdown-preview-section {{meta.bodyClasses}}">
      <div class="nightsky">
        <div class="constellation"></div> 
        <div class="meteorShower"></div>
        {%include "components/notegrowthhistory.njk"%}
        {% if settings.dgEnableSearch === true%}
        <div class="nav-top" style="display: flex; justify-content: space-between; width:100%; align-items: center;">
          <a href="/" style="text-decoration: none; display: block;">
              <h1 style="text-align:left; margin:0; padding:20px;">{{meta.siteName}}</h1>
          </a>
          <div style="display:flex; justify-content: center">
            {% include "components/searchButton.njk" %}
          </div>
        </div>
        {%endif%}
        {% if settings.dgEnableSearch === true %}
          {%include "components/searchContainer.njk"%}
        {% endif %}
        {% macro menuItem(fileOrFolderName, fileOrFolder, step, currentPath) %}
        {%if fileOrFolder.isNote or fileOrFolder.isFolder%}
          <div x-show="isOpen" style="display:none" class="{{'filelist' if step>0}}">
              {%if fileOrFolder.isNote and not fileOrFolder.hide %}
                <div @click.stop class="notelink {{ 'active-note' if fileOrFolder.permalink === permalink}}">
                    {%- if not meta.noteIconsSettings.filetree -%}<i icon-name="sticky-note" aria-hidden="true"></i>{%- endif -%}
                    <a data-note-icon="{{fileOrFolder.noteIcon}}" style="text-decoration: none;" class="filename" href="{{fileOrFolder.permalink}}">{{fileOrFolder.name}} </a>
                </div>
              {% elif fileOrFolder.isFolder%}
                <div class="folder inner-folder"  x-data="{isOpen: $persist(false).as('{{currentPath}}')}" @click.stop="isOpen=!isOpen">
                    <div class="foldername-wrapper align-icon">
                    <i x-show="isOpen" style="display: none;"  icon-name="chevron-down"></i>
                    <i x-show="!isOpen"  icon-name="chevron-right"></i>
                    <span class="foldername">{{fileOrFolderName}}</span>
                    </div>
                    {% for fileOrFolderName, child in fileOrFolder %}
                        {{menuItem(fileOrFolderName, child, step+1, (currentPath+"/"+fileOrFolderName))}}
                    {% endfor %}
                </div>
              {% endif %}
            </div>
          {%endif%}
        {% endmacro %}
      <div class="main-container">
        {% if settings.dgShowFileTree !== true %}
          {%include "components/navbar.njk"%}
        {%else%}
          {%include "components/filetree.njk"%}
        {% endif %}
        <main class="content cm-s-obsidian {{contentClasses}}" style="margin:-50px 0 0 0;">
          <header>
          {% if settings.dgShowInlineTitle === true %}
            <h1>{{ noteTitle  }}</h1>
          {% endif %}

          <div class="header-meta">
            {% if settings.dgShowTags === true and tags %}
              <div class="header-tags">
                {% for tag in tags %}
                  {% if tag != 'gardenEntry' and tag !='note' %}
                    <a class="tag" onclick="toggleTagSearch(this)">
                      #{{tag}}
                    </a>
                  {% endif %}
                {% endfor %}
              </div>
            {% endif %}
          </div>
          {% for imp in dynamics.common.header %}
            {% include imp %}
          {% endfor %}
          {% for imp in dynamics.index.header %}
            {% include imp %}
          {% endfor %}
          </header>
          {% for imp in dynamics.common.beforeContent %}
            {% include imp %}
          {% endfor %}
          {% for imp in dynamics.index.beforeContent %}
            {% include imp %}
          {% endfor %}
          {{ content | hideDataview | taggify | link | safe}}
          {% for imp in dynamics.common.afterContent %}
            {% include imp %}
          {% endfor %}
          {% for imp in dynamics.index.afterContent %}
            {% include imp %}
          {% endfor %}
          {% for imp in dynamics.index.footer %}
            {% include imp %}
          {% endfor %}
        </main>
        {% if settings.dgShowBacklinks === true or settings.dgShowLocalGraph === true or settings.dgShowToc === true%}
          {%include "components/sidebar.njk" %}
        {%endif%}
      </div>
      {% if settings.dgLinkPreview === true %}
        {%include "components/linkPreview.njk"%}
      {% endif %}
      {% for imp in dynamics.common.footer %}
        {% include imp %}
      {% endfor %}
      </div>
      <div class="moon">
        <div class="moonImg"></div>
      </div>
    </body>
  </html>

<script>
function initStars(){
  const windowWidth = screen.width;
  const windowHeight = screen.height;

  function getRandomValue(max) {
    return Math.floor(Math.random() * max);
  }

  function getRandomArbitrary(min, max) {
    return Math.floor(Math.random() * (max - min)) + min;
  }

  const style = ['style1', 'style2', 'style3'];
  const opacity = ['opacity1', 'opacity1', 'opacity1', 'opacity2', 'opacity3'];
  const twinkle = [
    'twinkle1',
    'twinkle1',
    'twinkle1',
    'twinkle2',
    'twinkle2',
    'twinkle3',
    'twinkle4',
  ];

  if(window.localStorage.getItem('site-theme') == 'dark'){
    let nightsky = document.querySelector(".constellation");
    let star = "";
    let numberOfStars = 250;
    const x = getRandomValue(windowWidth);
    const y = getRandomValue(windowHeight);

    for(let i = 0; i < numberOfStars; i++){
      let _s = getRandomValue(3);
      let _o = getRandomValue(5);
      let _t = getRandomValue(7);
      let className = "star " + style[_s] + " " + opacity[_o] + " " + twinkle[_t];
  
      star += "<span class='" + className + "' style='animation-delay: ." + getRandomArbitrary(0, 9) + "s; left: " + 
      getRandomArbitrary(0, windowWidth) + "px; top: " + getRandomArbitrary(0, windowHeight) + "px;'></span>"; 
    }

    nightsky.innerHTML = star;

    let randomNum = 5000;

    setTimeout(function(){
      if(window.localStorage.getItem('site-theme') == 'dark'){
        shootingStars();
      }
    }, randomNum);

    function shootingStars(){
      if(window.localStorage.getItem('site-theme') == 'dark'){
        setTimeout(shootingStars, randomNum);
        randomNum = getRandomArbitrary(5000, 10000);
        const _s = getRandomArbitrary(0, 3);
        let shootingStar = "<div class='shootingStar " + style[_s] + "'></div>";
        document.getElementsByClassName('meteorShower')[0].innerHTML = shootingStar;
        setTimeout(function(){
            document.getElementsByClassName('meteorShower')[0].innerHTML = "";
        }, 1000);
      }
    }
  } 
}
window.onload = initStars;
</script>