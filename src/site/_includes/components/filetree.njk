{% macro menuItem(fileOrFolderName, fileOrFolder, step, currentPath) %}
    {%if fileOrFolder.isNote or fileOrFolder.isFolder%}
        <div x-show="isOpen" style="display:none" class="{{'filelist' if step>0}}">
            {%if fileOrFolder.isNote and not fileOrFolder.hide %}
                <div @click.stop class="notelink {{ 'active-note' if fileOrFolder.permalink === permalink}}">
                    {%- if not meta.noteIconsSettings.filetree -%}<i icon-name="sticky-note" aria-hidden="true"></i>{%- endif -%}
                    <a data-note-icon="{{fileOrFolder.noteIcon}}" style="text-decoration: none;" class="filename" href="{{fileOrFolder.permalink}}">{{fileOrFolder.name}} </a>
                </div>
            {% elif fileOrFolder.isFolder%}
                <div class="folder inner-folder"  x-data="{isOpen: $persist(false).as('{{currentPath}}')}" @click.stop="isOpen=!isOpen">
                    <div class="foldername-wrapper align-icon">
                    <i x-show="isOpen" style="display: none;"  icon-name="chevron-down"></i>
                    <i x-show="!isOpen"  icon-name="chevron-right"></i>
                    <span class="foldername">{{fileOrFolderName}}</span>
                    </div>
                    {% for fileOrFolderName, child in fileOrFolder %}
                        {{menuItem(fileOrFolderName, child, step+1, (currentPath+"/"+fileOrFolderName))}}
                    {% endfor %}
                </div>
            {% endif %}
        </div>
        {%endif%}
    {% endmacro %}
    
    <div class="filetree-sidebar-container" style="display: inline-block; margin-top:-20px;" x-init="isDesktop = (window.innerWidth>=1615) ? true: false;" 
            x-on:resize.window="isDesktop = (window.innerWidth>=1615) ? true : false;" 
            x-data="{isDesktop: true, showFilesMobile: false}">
        <div x-show.important="!isDesktop" style="display: none;">
            {%include "components/filetreeNavbar.njk"%}
        </div>
        
        <div x-show="showFilesMobile && !isDesktop" @click="showFilesMobile = false" style="display:none;" class="fullpage-overlay"></div>
        <nav class="filetree-sidebar"  style="position: fixed" x-show.important="isDesktop || showFilesMobile" style="display: none;">
            <div class="navbar-inner" style="display: flex">
                <span style="font-size: 1.5rem; margin-right: 10px;" @click="showFilesMobile=!showFilesMobile"><i  icon-name="menu"></i></span>
                {% for imp in dynamics.filetree.beforeTitle %}
                    {% include imp %}
                {% endfor %}
                <a href="/" style="text-decoration: none;">
                    <h1 style="margin: 15px !important;">{{meta.siteName}}</h1>
                </a>
                {% for imp in dynamics.filetree.afterTitle %}
                    {% include imp %}
                {% endfor %}
            </div>
            <div class="folder" x-data="{isOpen: true}">
               {%- for fileOrFolderName, fileOrFolder in filetree -%}
                  {{menuItem(fileOrFolderName, fileOrFolder, 0, fileOrFolderName)}}
               {%- endfor -%}
            </div>
        </nav>
    </div>
<script>
    let clickEl = document.querySelector('.navbar > .navbar-inner > span');
    let navbarBtn = document.querySelector('.filetree-sidebar > .navbar-inner > span');
    let overlay = document.querySelector('.fullpage-overlay');
    clickEl.addEventListener('click', function() {
        let hidenavbar = document.querySelector('.filetree-sidebar');
        hidenavbar.classList.add('show-filetree-sidebar');
        hidenavbar.classList.remove('filetree-sidebar');
    })
    navbarBtn.addEventListener('click', function() {
        showNavbar.classList.remove('show-filetree-sidebar');
        showNavbar.classList.add('filetree-sidebar');
    })
    overlay.addEventListener('click', function(){
        let showNavbar = document.querySelector('.show-filetree-sidebar');
        showNavbar.classList.remove('show-filetree-sidebar');
        showNavbar.classList.add('filetree-sidebar');
    })
</script>